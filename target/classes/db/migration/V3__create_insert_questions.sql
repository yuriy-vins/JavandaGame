-- src/main/resources/db/migration/V3__create_insert_questions.sql
-- СORE-1
INSERT INTO questions (question, answer_id) VALUES ('Что такое ООП?', 1);
INSERT INTO questions (question, answer_id) VALUES ('Какие преимущества у ООП?', 2);
INSERT INTO questions (question, answer_id) VALUES ('Какие недостатки у ООП?', 3);
INSERT INTO questions (question, answer_id) VALUES ('Назовите основные принципы ООП.', 4);
INSERT INTO questions (question, answer_id) VALUES ('Что такое инкапсуляция?', 5);
INSERT INTO questions (question, answer_id) VALUES ('Что такое наследование?', 6);
INSERT INTO questions (question, answer_id) VALUES ('Что такое полиморфизм?', 7);
INSERT INTO questions (question, answer_id) VALUES ('Что такое ассоциация?', 8);
INSERT INTO questions (question, answer_id) VALUES ('Что такое композиция?', 9);
INSERT INTO questions (question, answer_id) VALUES ('Что такое агрегация?', 10);
INSERT INTO questions (question, answer_id) VALUES ('Расскажите про раннее и позднее связывание.', 11);
INSERT INTO questions (question, answer_id) VALUES ('Принципы SOLID.', 12);
INSERT INTO questions (question, answer_id) VALUES ('Какая основная идея языка?', 13);
INSERT INTO questions (question, answer_id) VALUES ('За счет чего обеспечивается кроссплатформенность?', 14);
INSERT INTO questions (question, answer_id) VALUES ('Какие преимущества у java?', 15);
INSERT INTO questions (question, answer_id) VALUES ('Какие недостатки у Java?', 16);
INSERT INTO questions (question, answer_id) VALUES ('Что такое JDK? Что в него входит?', 17);
INSERT INTO questions (question, answer_id) VALUES ('Что такое JRE? что в него входит?', 18);
INSERT INTO questions (question, answer_id) VALUES ('Что такое JVM?', 19);
INSERT INTO questions (question, answer_id) VALUES ('Что такое byte code?', 20);
INSERT INTO questions (question, answer_id) VALUES ('Что такое загрузчик классов (classloader)?', 21);
INSERT INTO questions (question, answer_id) VALUES ('Что такое JIT?', 22);
INSERT INTO questions (question, answer_id) VALUES ('Что такое сборщик мусора? (Garbage collector)', 23);
INSERT INTO questions (question, answer_id) VALUES ('Что такое Heap и Stack память в Java? Чем они отличаются?', 24);
INSERT INTO questions (question, answer_id) VALUES ('Какие примитивные типы данных есть в Java?', 25);
INSERT INTO questions (question, answer_id) VALUES ('Что такое char?', 26);
INSERT INTO questions (question, answer_id) VALUES ('Сколько памяти занимает boolean?', 27);
INSERT INTO questions (question, answer_id) VALUES ('Что такое классы-обертки?', 28);
INSERT INTO questions (question, answer_id) VALUES ('Что такое автоупаковка и автораспаковка?', 29);
INSERT INTO questions (question, answer_id) VALUES ('Что такое явное и неявное приведение типов? В каких случаях в java нужно использовать явное приведение?', 30);
INSERT INTO questions (question, answer_id) VALUES ('Что такое пул интов?', 31);
INSERT INTO questions (question, answer_id) VALUES ('Какие нюансы у строк в Java?', 32);
INSERT INTO questions (question, answer_id) VALUES ('Что такое пул строк?', 33);
INSERT INTO questions (question, answer_id) VALUES ('Почему не рекомендуется изменять строки в цикле? Что рекомендуется использовать?', 34);
INSERT INTO questions (question, answer_id) VALUES ('Почему строки не рекомендуется использовать для хранения паролей?', 35);
INSERT INTO questions (question, answer_id) VALUES ('Почему String неизменяемый и финализированный класс?', 36);
INSERT INTO questions (question, answer_id) VALUES ('Почему строка является популярным ключом в HashMap в Java?', 37);
INSERT INTO questions (question, answer_id) VALUES ('Что делает метод intern() в классе String?', 38);
INSERT INTO questions (question, answer_id) VALUES ('Можно ли использовать строки в конструкции switch?', 39);
INSERT INTO questions (question, answer_id) VALUES ('Какая основная разница между String, StringBuffer, StringBuilder?', 40);
INSERT INTO questions (question, answer_id) VALUES ('Существуют ли в java многомерные массивы?', 41);
INSERT INTO questions (question, answer_id) VALUES ('Какими значениями инициируются переменные по умолчанию?', 42);
INSERT INTO questions (question, answer_id) VALUES ('Что такое сигнатура метода?', 43);
INSERT INTO questions (question, answer_id) VALUES ('Расскажите про метод main.', 44);
INSERT INTO questions (question, answer_id) VALUES ('Каким образом переменные передаются в методы, по значению или по ссылке?', 45);
INSERT INTO questions (question, answer_id) VALUES ('Какие виды классов есть в java?', 46);
INSERT INTO questions (question, answer_id) VALUES ('Расскажите про вложенные классы. В каких случаях они применяются?', 47);
INSERT INTO questions (question, answer_id) VALUES ('Что такое «локальный класс»? Каковы его особенности?', 48);
INSERT INTO questions (question, answer_id) VALUES ('Что такое «анонимные классы»? Где они применяются?', 49);
INSERT INTO questions (question, answer_id) VALUES ('Каким образом из вложенного класса получить доступ к полю внешнего класса?', 50);
INSERT INTO questions (question, answer_id) VALUES ('Что такое перечисления (enum)?', 51);
INSERT INTO questions (question, answer_id) VALUES ('Как проблема ромбовидного наследования решена в java?', 52);
INSERT INTO questions (question, answer_id) VALUES ('Что такое конструктор по умолчанию?', 53);
INSERT INTO questions (question, answer_id) VALUES ('Могут ли быть приватные конструкторы? Для чего они нужны?', 54);
INSERT INTO questions (question, answer_id) VALUES ('Расскажите про классы-загрузчики и про динамическую загрузку классов.', 55);
INSERT INTO questions (question, answer_id) VALUES ('Чем отличаются конструкторы по-умолчанию, конструктор копирования и конструктор с параметрами?', 56);
INSERT INTO questions (question, answer_id) VALUES ('Какие модификаторы доступа есть в Java? Какие применимы к классам?', 57);
INSERT INTO questions (question, answer_id) VALUES ('Что означает модификатор static?', 58);
INSERT INTO questions (question, answer_id) VALUES ('Может ли статический метод быть переопределён или перегружен?', 59);
INSERT INTO questions (question, answer_id) VALUES ('Могут ли нестатические методы перегрузить статические?', 60);
INSERT INTO questions (question, answer_id) VALUES ('Можно ли сузить уровень доступа/тип возвращаемого значения при переопределении метода?', 61);
INSERT INTO questions (question, answer_id) VALUES ('Что можно изменить в сигнатуре метода при переопределении? Можно ли менять модификаторы (throws и тп)?', 62);
INSERT INTO questions (question, answer_id) VALUES ('Могут ли классы быть статическими?', 63);
INSERT INTO questions (question, answer_id) VALUES ('Что означает модификатор final? К чему он может быть применим?', 64);
INSERT INTO questions (question, answer_id) VALUES ('Что такое абстрактные классы? Чем они отличаются от обычных?', 65);
INSERT INTO questions (question, answer_id) VALUES ('Может ли быть абстрактный класс без абстрактных методов?', 66);
INSERT INTO questions (question, answer_id) VALUES ('Могут ли быть конструкторы у абстрактных классов? Для чего они нужны?', 67);
INSERT INTO questions (question, answer_id) VALUES ('Что такое интерфейсы? Какие модификаторы по умолчанию имеют поля и методы интерфейсов?', 68);
INSERT INTO questions (question, answer_id) VALUES ('Чем интерфейсы отличаются от абстрактных классов? В каких случаях следует использовать абстрактный класс, а в каких интерфейс?', 69);
INSERT INTO questions (question, answer_id) VALUES ('Может ли один интерфейс наследоваться от другого? От двух других?', 70);
INSERT INTO questions (question, answer_id) VALUES ('Что такое дефолтные методы интерфейсов? Для чего они нужны?', 71);
INSERT INTO questions (question, answer_id) VALUES ('Как решается проблема ромбовидного наследования при наследовании интерфейсов при наличии default методов?', 72);
INSERT INTO questions (question, answer_id) VALUES ('Каков порядок вызова конструкторов и блоков инициализации с учётом иерархии классов?', 73);
INSERT INTO questions (question, answer_id) VALUES ('Зачем нужны и какие бывают блоки инициализации?', 74);
INSERT INTO questions (question, answer_id) VALUES ('Для чего в Java используются статические блоки инициализации?', 75);
INSERT INTO questions (question, answer_id) VALUES ('Что произойдет, если в блоке инициализации возникнет исключительная ситуация?', 76);
INSERT INTO questions (question, answer_id) VALUES ('Какое исключение выбрасывается при возникновении ошибки в блоке инициализации класса?', 77);
INSERT INTO questions (question, answer_id) VALUES ('Что такое класс Object?', 78);
INSERT INTO questions (question, answer_id) VALUES ('Какие методы есть у класса Object (перечислить все)? Что они делают?', 79);
INSERT INTO questions (question, answer_id) VALUES ('Расскажите про equals и hashcode.', 80);
INSERT INTO questions (question, answer_id) VALUES ('Каким образом реализованы методы hashCode() и equals() в классе Object?', 81);
INSERT INTO questions (question, answer_id) VALUES ('Зачем нужен equals()?', 82);
INSERT INTO questions (question, answer_id) VALUES ('Что будет, если переопределить equals() не переопределяя hashCode()? Какие могут возникнуть проблемы?', 83);
INSERT INTO questions (question, answer_id) VALUES ('Какой контракт между hashCode() и equals()?', 84);
INSERT INTO questions (question, answer_id) VALUES ('Для чего нужен метод hashCode()?', 85);
INSERT INTO questions (question, answer_id) VALUES ('Правила переопределения метода hashCode().', 86);
INSERT INTO questions (question, answer_id) VALUES ('Есть ли какие-либо рекомендации о том, какие поля следует использовать при подсчете hashCode()?', 87);
INSERT INTO questions (question, answer_id) VALUES ('Могут ли у разных объектов быть одинаковые hashCode()?', 88);
INSERT INTO questions (question, answer_id) VALUES ('Почему нельзя реализовать hashCode(), который будет гарантированно уникальным для каждого объекта?', 89);
INSERT INTO questions (question, answer_id) VALUES ('Есть класс Point{int x, y;}. Почему хэш-код в виде 31 * x + y предпочтительнее чем x + y?', 90);
INSERT INTO questions (question, answer_id) VALUES ('Чем a.getClass().equals(A.class) отличается от a instanceOf A.class ?', 91);
INSERT INTO questions (question, answer_id) VALUES ('Что такое исключения?', 92);
INSERT INTO questions (question, answer_id) VALUES ('Опишите иерархию исключений.', 93);
INSERT INTO questions (question, answer_id) VALUES ('Расскажите про обрабатываемые и необрабатываемые исключения.', 94);
INSERT INTO questions (question, answer_id) VALUES ('Можно ли обработать необрабатываемые исключения?', 95);
INSERT INTO questions (question, answer_id) VALUES ('Какой оператор позволяет принудительно выбросить исключение?', 96);
INSERT INTO questions (question, answer_id) VALUES ('О чем говорит ключевое слово throws?', 97);
INSERT INTO questions (question, answer_id) VALUES ('Как создать собственное («пользовательское») исключение?', 98);
INSERT INTO questions (question, answer_id) VALUES ('Расскажите про механизм обработки исключений в java (Try-catch-finally).', 99);
INSERT INTO questions (question, answer_id) VALUES ('Возможно ли использование блока try-finally (без catch)?', 100);
INSERT INTO questions (question, answer_id) VALUES ('Может ли один блок catch отлавливать сразу несколько исключений?', 101);
INSERT INTO questions (question, answer_id) VALUES ('Всегда ли выполняется блок finally? Существуют ли ситуации, когда блок finally не будет выполнен?', 102);
INSERT INTO questions (question, answer_id) VALUES ('Может ли метод main() выбросить исключение во вне и если да, то где будет происходить обработка данного исключения?', 103);
INSERT INTO questions (question, answer_id) VALUES ('В каком порядке следует обрабатывать исключения в catch блоках?', 104);
INSERT INTO questions (question, answer_id) VALUES ('Что такое механизм try-with-resources?', 105);
INSERT INTO questions (question, answer_id) VALUES ('Что произойдет если исключение будет выброшено из блока catch после чего другое исключение будет выброшено из блока finally?', 106);
INSERT INTO questions (question, answer_id) VALUES ('Что произойдет если исключение будет выброшено из блока catch после чего другое исключение будет выброшено из метода close() при использовании try-with-resources?', 107);
INSERT INTO questions (question, answer_id) VALUES ('Что такое сериализация и как она реализована в Java?', 108);
INSERT INTO questions (question, answer_id) VALUES ('Для чего нужна сериализация?', 109);
INSERT INTO questions (question, answer_id) VALUES ('Опишите процесс сериализации/десериализации с использованием Serializable.', 110);
INSERT INTO questions (question, answer_id) VALUES ('Как изменить стандартное поведение сериализации/десериализации?', 111);
INSERT INTO questions (question, answer_id) VALUES ('Какие поля не будут сериализованы при сериализации? Будет ли сериализовано final поле?', 112);
INSERT INTO questions (question, answer_id) VALUES ('Как создать собственный протокол сериализации?', 113);
INSERT INTO questions (question, answer_id) VALUES ('Какая роль поля serialVersionUID в сериализации?', 114);
INSERT INTO questions (question, answer_id) VALUES ('Когда стоит изменять значение поля serialVersionUID?', 115);
INSERT INTO questions (question, answer_id) VALUES ('В чем проблема сериализации Singleton?', 116);
INSERT INTO questions (question, answer_id) VALUES ('Расскажите про клонирование объектов.', 117);
INSERT INTO questions (question, answer_id) VALUES ('В чем отличие между поверхностным и глубоким клонированием?', 118);
INSERT INTO questions (question, answer_id) VALUES ('Какой способ клонирования предпочтительней?', 119);
INSERT INTO questions (question, answer_id) VALUES ('Почему метод clone() объявлен в классе Object, а не в интерфейсе Cloneable?', 120);
INSERT INTO questions (question, answer_id) VALUES ('Как создать глубокую копию объекта? (2 способа).', 121);
-- CORE-2




